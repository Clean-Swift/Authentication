//
//  WelcomeViewControllerTests.swift
//  Authentication
//
//  Created by Raymond Law on 10/26/17.
//  Copyright (c) 2017 Clean Swift LLC. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

@testable import Authentication
import XCTest

class WelcomeViewControllerTests: XCTestCase
{
  // MARK: Subject under test
  
  var sut: WelcomeViewController!
  var window: UIWindow!
  
  // MARK: Test lifecycle
  
  override func setUp()
  {
    super.setUp()
    window = UIWindow()
    setupWelcomeViewController()
  }
  
  override func tearDown()
  {
    window = nil
    super.tearDown()
  }
  
  // MARK: Test setup
  
  func setupWelcomeViewController()
  {
    let bundle = Bundle.main
    let storyboard = UIStoryboard(name: "Main", bundle: bundle)
    sut = storyboard.instantiateViewController(withIdentifier: "WelcomeViewController") as! WelcomeViewController
  }
  
  func loadView()
  {
    window.addSubview(sut.view)
    RunLoop.current.run(until: Date())
  }
  
  // MARK: Test doubles
  
  class WelcomeBusinessLogicSpy: WelcomeBusinessLogic
  {
    var loginCalled = false
    
    func login(request: Welcome.Login.Request)
    {
      loginCalled = true
    }
  }
  
  // MARK: Tests
  
  func testShouldLoginWhenLoginButtonIsTapped()
  {
    // Given
    let spy = WelcomeBusinessLogicSpy()
    sut.interactor = spy
    
    // When
    loadView()
    sut.loginButtonTapped(self)
    
    // Then
    XCTAssertTrue(spy.loginCalled, "loginButtonTapped(_:) should ask the interactor to login")
  }
  
  func testDisplayLoginOnSuccess()
  {
    // Given
    let viewModel = Welcome.Login.ViewModel(success: true, greeting: "Hello there")
    
    // When
    loadView()
    sut.displayLogin(viewModel: viewModel)
    
    // Then
    XCTAssertEqual(sut.messageLabel.text, "Hello there", "loginButtonTapped(_:) should display a greeting")
  }
  
  func testDisplayLoginOnFailure()
  {
    // Given
    let viewModel = Welcome.Login.ViewModel(success: false, greeting: "")
    
    // When
    loadView()
    sut.displayLogin(viewModel: viewModel)
    
    // Then
    XCTAssertEqual(sut.messageLabel.text, "Your email/password didn't match", "loginButtonTapped(_:) should display an error")
  }
}
