//
//  WelcomeWorkerTests.swift
//  Authentication
//
//  Created by Raymond Law on 10/26/17.
//  Copyright (c) 2017 Clean Swift LLC. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

@testable import Authentication
import XCTest

class WelcomeWorkerTests: XCTestCase
{
  // MARK: Subject under test
  
  var sut: WelcomeWorker!
  
  // MARK: Test lifecycle
  
  override func setUp()
  {
    super.setUp()
    setupWelcomeWorker()
  }
  
  override func tearDown()
  {
    super.tearDown()
  }
  
  // MARK: Test setup
  
  func setupWelcomeWorker()
  {
    sut = WelcomeWorker()
  }
  
  // MARK: Test doubles
  
  // MARK: Tests
  
  func testLoginOnSuccess()
  {
    // Given
    let email = "ray@clean-swift.com"
    let password = "secret"
    
    // When
    var actualSuccess: Bool?
    var actualUsername: String?
    let loginCompleted = expectation(description: "Wait for login to complete")
    sut.login(email: email, password: password) { (success, username) in
      actualSuccess = success
      actualUsername = username
      loginCompleted.fulfill()
    }
    waitForExpectations(timeout: 5.0, handler: nil)
    
    // Then
    XCTAssertTrue(actualSuccess!, "login(email:password:completionHandler) should result in success")
    XCTAssertEqual(actualUsername, "Raymond", "login(email:password:completionHandler) should return an username")
  }
  
  func testLoginOnFailure()
  {
    // Given
    let email = "wrong"
    let password = "wrong"
    
    // When
    var actualSuccess: Bool?
    var actualUsername: String?
    let loginCompleted = expectation(description: "Wait for login to complete")
    sut.login(email: email, password: password) { (success, username) in
      actualSuccess = success
      actualUsername = username
      loginCompleted.fulfill()
    }
    waitForExpectations(timeout: 5.0, handler: nil)
    
    // Then
    XCTAssertFalse(actualSuccess!, "login(email:password:completionHandler) should result in failure")
    XCTAssertNil(actualUsername, "login(email:password:completionHandler) should not return an username")
  }
}
